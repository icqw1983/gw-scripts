#!/bin/sh

LAN_IF=eno1
WAN_IF=enp2s0
BRIDGE_IF=br0
VPN_IF=tun+

FROM_BRIDGE="-i ${BRIDGE_IF}"
TO_BRIDGE="-o ${BRIDGE_IF}"

FROM_VPN="-i ${VPN_IF}"
TO_VPN="-o ${VPN_IF}"

FROM_LO="-i lo"
TO_LO="-o lo"

FROM_LAN="${FROM_BRIDGE} -m physdev --physdev-in ${LAN_IF}"
FROM_WAN="${FROM_BRIDGE} -m physdev --physdev-in ${WAN_IF}"

TO_LAN="${TO_BRIDGE} -m physdev --physdev-out ${LAN_IF}"
TO_WAN="${TO_BRIDGE} -m physdev --physdev-out ${WAN_IF}"

FROM_WAN_TO_LAN="${FROM_WAN} ${TO_LAN}"
FROM_LAN_TO_WAN="${FROM_LAN} ${TO_WAN}"

MARK_MASK="0xff"
FOR_BRIDGE="0x01/${MARK_MASK}"
FOR_DEFAULT="0x99/${MARK_MASK}"
FOR_ANY="0x00/${MARK_MASK}"

TO_ALL=""
ALL=""

ipt() {
    iptables $* 2>&1
    ip6tables $* 2>&1
}

ipt4() {
    iptables $* 2>&1
}

ipt6() {
    ip6tables $* 2>&1
}

flush_firewall() {
    ipt -t raw -F
    ipt -t raw -X
    ipt -t filter -F
    ipt -t filter -X
    ipt -t mangle -F
    ipt -t mangle -X
    ipt -t nat -F
    ipt -t nat -X
}

policies() {
    ipt -t filter -P INPUT ACCEPT
    ipt -t filter -P OUTPUT ACCEPT
    ipt -t filter -P FORWARD ACCEPT
}

chain_general_tracking() {
    ipt -t filter -N general_tracking
    allow_conntrack_in general_tracking
    drop_fragments_from general_tracking
}

chain_icmp_handling() {
    ipt -t filter -N icmp_handling

    allow4 icmp_handling "-p icmp --icmp-type 0"
    allow4 icmp_handling "-p icmp --icmp-type 3"
    allow4 icmp_handling "-p icmp --icmp-type 8"
    allow4 icmp_handling "-p icmp --icmp-type 11"
    drop4 icmp_handling

    allow6 icmp_handling "-p ipv6-icmp --icmpv6-type 1"
    allow6 icmp_handling "-p ipv6-icmp --icmpv6-type 2"
    allow6 icmp_handling "-p ipv6-icmp --icmpv6-type 3"
    allow6 icmp_handling "-p ipv6-icmp --icmpv6-type 4"
    allow6 icmp_handling "-p ipv6-icmp --icmpv6-type 128"
    allow6 icmp_handling "-p ipv6-icmp --icmpv6-type 133"
    allow6 icmp_handling "-p ipv6-icmp --icmpv6-type 134"
    allow6 icmp_handling "-p ipv6-icmp --icmpv6-type 135"
    allow6 icmp_handling "-p ipv6-icmp --icmpv6-type 136"
    allow6 icmp_handling "-p ipv6-icmp --icmpv6-type 137"
    allow6 icmp_handling "-p ipv6-icmp --icmpv6-type 141"
    allow6 icmp_handling "-p ipv6-icmp --icmpv6-type 142"
    allow6 icmp_handling "-s fe80::/10 -p ipv6-icmp --icmpv6-type 130"
    allow6 icmp_handling "-s fe80::/10 -p ipv6-icmp --icmpv6-type 131"
    allow6 icmp_handling "-s fe80::/10 -p ipv6-icmp --icmpv6-type 132"
    allow6 icmp_handling "-s fe80::/10 -p ipv6-icmp --icmpv6-type 143"
    allow6 icmp_handling "-p ipv6-icmp --icmpv6-type 148"
    allow6 icmp_handling "-p ipv6-icmp --icmpv6-type 149"
    allow6 icmp_handling "-s fe80::/10 -p ipv6-icmp --icmpv6-type 151"
    allow6 icmp_handling "-s fe80::/10 -p ipv6-icmp --icmpv6-type 152"
    allow6 icmp_handling "-s fe80::/10 -p ipv6-icmp --icmpv6-type 153"
    drop6 icmp_handling
}

allow_dhcp_in() {
    allow4 "$1" "$2" "-p udp -m udp --dport 68"
    allow6 "$1" "$2" "-s fe80::/10 -d fe80::/10 -p udp -m udp --sport 547 --dport 546"
}

drop_fragments_from() {
    drop4 "$1" "-f"
}

allow_conntrack_in() {
    allow "$1" "-m conntrack --ctstate RELATED,ESTABLISHED"
    drop "$1" "-m conntrack --ctstate INVALID"
}

jump() {
    ipt -t ${1:+"$1"} -A ${2:+"$2"} ${3:+"$3"} ${4:+"$4"} -j ${5:+"$5"}
}

allow() {
    ipt -t filter -A ${1:+"$1"} ${2:+"$2"} ${3:+"$3"} -j ACCEPT
}

reject() {
    ipt -t filter -A ${1:+"$1"} ${2:+"$2"} ${3:+"$3"} -j REJECT
}

drop() {
    ipt -t filter -A ${1:+"$1"} ${2:+"$2"} ${3:+"$3"} -j DROP
}

jump4() {
    ipt4 -t ${1:+"$1"} -A ${2:+"$2"} ${3:+"$3"} ${4:+"$4"} -j ${5:+"$5"}
}

allow4() {
    ipt4 -t filter -A ${1:+"$1"} ${2:+"$2"} ${3:+"$3"} -j ACCEPT
}

reject4() {
    ipt4 -t filter -A ${1:+"$1"} ${2:+"$2"} ${3:+"$3"} -j REJECT
}

drop4() {
    ipt4 -t filter -A ${1:+"$1"} ${2:+"$2"} ${3:+"$3"} -j DROP
}

jump6() {
    ipt6 -t ${1:+"$1"} -A ${2:+"$2"} ${3:+"$3"} ${4:+"$4"} -j ${5:+"$5"}
}

allow6() {
    ipt6 -t filter -A ${1:+"$1"} ${2:+"$2"} ${3:+"$3"} -j ACCEPT
}

reject6() {
    ipt6 -t filter -A ${1:+"$1"} ${2:+"$2"} ${3:+"$3"} -j REJECT
}

drop6() {
    ipt6 -t filter -A ${1:+"$1"} ${2:+"$2"} ${3:+"$3"} -j DROP
}

dscp() {
    ipt -t mangle -A ${1:+"$1"} ${2:+"$2"} ${3:+"$3"} -m dscp --dscp 0x00 \
      -j DSCP --set-dscp ${4:+"$4"}
}

dscp4() {
    ipt4 -t mangle -A ${1:+"$1"} ${2:+"$2"} ${3:+"$3"} -m dscp --dscp 0x00 \
      -j DSCP --set-dscp ${4:+"$4"}
}

dscp6() {
    ipt6 -t mangle -A ${1:+"$1"} ${2:+"$2"} ${3:+"$3"} -m dscp --dscp 0x00 \
      -j DSCP --set-dscp ${4:+"$4"}
}

skip_dscp() {
    ipt -t mangle -A ${1:+"$1"} ${2:+"$2"} -j ACCEPT
}

skip_dscp4() {
    ipt4 -t mangle -A ${1:+"$1"} ${2:+"$2"} -j ACCEPT
}

skip_dscp6() {
    ipt6 -t mangle -A ${1:+"$1"} ${2:+"$2"} -j ACCEPT
}

mark() {
    ipt -t mangle -A ${1:+"$1"} ${2:+"$2"} -m mark --mark "$FOR_ANY" \
      -j MARK --set-mark ${3:+"$3"}
}

mark4() {
    ipt4 -t mangle -A ${1:+"$1"} ${2:+"$2"} -m mark --mark "$FOR_ANY" \
      -j MARK --set-mark ${3:+"$3"}
}

mark6() {
    ipt6 -t mangle -A ${1:+"$1"} ${2:+"$2"} -m mark --mark "$FOR_ANY" \
      -j MARK --set-mark ${3:+"$3"}
}

skip_mark() {
    ipt -t mangle -A ${1:+"$1"} ${2:+"$2"} -j ACCEPT
}

skip_mark4() {
    ipt4 -t mangle -A ${1:+"$1"} ${2:+"$2"} -j ACCEPT
}

skip_mark6() {
    ipt6 -t mangle -A ${1:+"$1"} ${2:+"$2"} -j ACCEPT
}

save_mark() {
    ipt -t mangle -A ${1:+"$1"} -j CONNMARK --save-mark --mask "$MARK_MASK"
}

save_mark4() {
    ipt4 -t mangle -A ${1:+"$1"} -j CONNMARK --save-mark --mask "$MARK_MASK"
}

save_mark6() {
    ipt6 -t mangle -A ${1:+"$1"} -j CONNMARK --save-mark --mask "$MARK_MASK"
}

restore_mark() {
    ipt -t mangle -A ${1:+"$1"} -j CONNMARK --restore-mark --mask "$MARK_MASK"
}

restore_mark4() {
    ipt4 -t mangle -A ${1:+"$1"} -j CONNMARK --restore-mark --mask "$MARK_MASK"
}

restore_mark6() {
    ipt6 -t mangle -A ${1:+"$1"} -j CONNMARK --restore-mark --mask "$MARK_MASK"
}

masquerade() {
    ipt -t nat -A POSTROUTING ${1:+"$1"} ${2:+"$2"} -j MASQUERADE
}

masquerade4() {
    ipt4 -t nat -A POSTROUTING ${1:+"$1"} ${2:+"$2"} -j MASQUERADE
}

masquerade6() {
    ipt6 -t nat -A POSTROUTING ${1:+"$1"} ${2:+"$2"} -j MASQUERADE
}

firewall() {
    # Input Chain input_wan
    ipt -t filter -N input_wan
    jump4 filter input_wan "$FROM_ALL" "-p icmp" icmp_handling
    jump6 filter input_wan "$FROM_ALL" "-p icmpv6" icmp_handling
    allow_dhcp_in input_wan "$FROM_ALL"
    allow input_wan "$FROM_ALL" "-p tcp -m multiport --dports ssh,http,https"
    drop input_wan

    # Input Chain input_vpn
    ipt -t filter -N input_vpn
    jump4 filter input_vpn "$FROM_ALL" "-p icmp" icmp_handling
    drop input_vpn

    # Input Chain input_lan
    ipt -t filter -N input_lan
    allow input_lan "$FROM_ALL" "$ALL"

    # Input Chain input_lo
    ipt -t filter -N input_lo
    allow input_lo "$FROM_ALL" "$ALL"

    # Forward Chain forward_wan_to_lan
    ipt -t filter -N forward_wan_to_lan
    jump4 filter forward_wan_to_lan "$FROM_ALL" "-p icmp" icmp_handling
    jump6 filter forward_wan_to_lan "$FROM_ALL" "-p icmpv6" icmp_handling
    allow_dhcp_in forward_wan_to_lan "$FROM_ALL"
    drop forward_wan_to_lan

    # Forward Chain forward_lan_to_wan
    ipt -t filter -N forward_lan_to_wan
    allow forward_lan_to_wan "$FROM_ALL" "$ALL"

    # Output Chain output_bridge
    ipt -t filter -N output_bridge
    reject output_bridge "$TO_ALL" "-m owner --uid-owner debian-transmission"
    allow output_bridge "$TO_ALL" "$ALL"

    # Output Chain output_vpn
    ipt -t filter -N output_vpn
    allow output_vpn "$TO_ALL" "$ALL"

    # Output Chain output_lo
    ipt -t filter -N output_lo
    allow output_lo "$TO_ALL" "$ALL"

    # Input Rules
    jump filter INPUT "$FROM_ALL" "$ALL" general_tracking
    jump filter INPUT "$FROM_WAN" "$ALL" input_wan
    jump filter INPUT "$FROM_LAN" "$ALL" input_lan
    jump filter INPUT "$FROM_VPN" "$ALL" input_vpn
    jump filter INPUT "$FROM_LO" "$ALL" input_lo
    drop INPUT

    # Forward Rules
    jump filter FORWARD "$FROM_ALL" "$ALL" general_tracking
    jump filter FORWARD "$FROM_WAN_TO_LAN" "$ALL" forward_wan_to_lan
    jump filter FORWARD "$FROM_LAN_TO_WAN" "$ALL" forward_lan_to_wan
    drop FORWARD

    # Output Rules
    jump filter OUTPUT "$TO_ALL" "$ALL" general_tracking
    jump filter OUTPUT "$TO_BRIDGE" "$ALL" output_bridge
    jump filter OUTPUT "$TO_VPN" "$ALL" output_vpn
    jump filter OUTPUT "$TO_LO" "$ALL" output_lo
    drop OUTPUT
}

dscp_tagging() {
    # Mangle Chain mark_vpn
    ipt4 -t mangle -N dscp_vpn
    dscp4 dscp_vpn "$TO_ALL" "-p icmp" 0x01
    dscp4 dscp_vpn "$TO_ALL" "$ALL" 0x08
    skip_dscp4 dscp_vpn "$ALL"

    # Mangle Chain dscp_bridge
    ipt -t mangle -N dscp_bridge
    dscp dscp_bridge "$TO_ALL" "-p udp --dport domain" 0x04
    dscp dscp_bridge "$TO_ALL" "-p tcp --dport ssh" 0x04
    skip_dscp dscp_bridge "$ALL"

    # Postrouting Rules
    skip_dscp POSTROUTING "-m dscp ! --dscp 0x00"
    jump mangle POSTROUTING "$TO_BRIDGE" "$ALL" dscp_bridge
    jump4 mangle POSTROUTING "$TO_VPN" "$ALL" dscp_vpn
}

split_routing() {
    # Restore Marks
    restore_mark4 PREROUTING
    restore_mark4 OUTPUT

    # Mangle Chain route_output
    ipt -t mangle -N route_output
    mark4 route_output "$TO_LO" "$FOR_DEFAULT"
    mark4 route_output "-m owner --uid-owner debian-transmission" "$FOR_DEFAULT"
    mark4 route_output "$TO_ALL" "$FOR_BRIDGE"
    save_mark4 route_output

    # Output Rules
    jump4 mangle OUTPUT "$TO_ALL" "-m mark --mark $FOR_ANY" route_output

    # Masquerade
    masquerade4 "$TO_BRIDGE" "-m mark --mark $FOR_BRIDGE"
}

policies
flush_firewall
chain_general_tracking
chain_icmp_handling
policies
firewall
dscp_tagging
split_routing
